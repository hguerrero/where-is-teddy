apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: wheres-teddy-template
  title: Where's Teddy Python application to show Gen AI with OpenShift AI
  description: Python application to show Gen AI with OpenShift AI
  tags:
    - python
    - genai
    - datascience
    - nodejs
spec:
  owner: rhdh
  type: service

  parameters:
    - title: Provide information about the GitHub location
      required:
        - host
      properties:
        host:
          title: Repo Host
          type: string
          description: Your SCM host
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        owner:
          title: Owner
          type: string
          description: Owner of the component
          default: development
          enum:
            - development
    - title: Provide information about the new component
      required:
        - cluster_id
        - namespace
        - model_endpoint
        - model_path
        - owner
      properties:
        cluster_id:
          title: Cluster Id
          type: string
          description: Id of the cluster
          default: .apps.wearedevs.rl97.p1.openshiftapps.com
        namespace: 
          title: Namespace
          type: string
          description: Namespace
        model_endpoint:
          title: REST endpoint for the inference API
          type: string
          description: REST endpoint for the inference API
          default: https://redhat-dog-image-generation.apps.wearedevs.rl97.p1.openshiftapps.com
        model_path:
          title: REST endpoint path for the inference API
          type: string
          description: REST endpoint path for the inference API
          default: /v1/models/model:predict
    - title: Provide Build Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: quay-gd9rg.apps.wearedevs.rl97.p1.openshiftapps.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
  steps:
    - id: templateSource
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        targetPath: ./source
        values:
          repoName: ${{parameters.namespace}}-wheres-teddy
          description: ${{ parameters.description }}
          owner: ${{ user.entity.metadata.name }}
          repoOwner: ${{ parameters.owner }}
          cluster_id: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          host: ${{ parameters.host }}
          component_id: ${{parameters.namespace}}-wheres-teddy-app
          model_endpoint: ${{parameters.model_endpoint}}
          model_url: ${{parameters.model_endpoint}}/${{parameters.model_path}}
          destination: ${{ parameters.owner }}/${{parameters.namespace}}-wheres-teddy
    - id: publishSource
      name: Publishing to Source Code Repository
      action: publish:gitlab
      input:
        sourcePath: ./source
        repoUrl: "${{ parameters.host }}?owner=${{ parameters.owner }}&repo=${{parameters.namespace}}-wheres-teddy"
        defaultBranch: main
        repoVisibility: public
    - id: registerSource
      name: Registering the Source Code Component
      action: catalog:register
      input:
        repoContentsUrl: ${{steps.publishSource.output.repoContentsUrl}}
        catalogInfoPath: /catalog-info.yaml
    - id: templateGitops
      name: Generating the deployment resources and artefacts
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{parameters.namespace}}-wheres-teddy-app
          description: ${{parameters.description}}
          destination: https://${{ parameters.host }}/${{ parameters.owner }}/${{parameters.namespace}}-wheres-teddy-gitops.git
          source_repository: https://${{ parameters.host }}/${{ parameters.owner }}/${{parameters.namespace}}-wheres-teddy.git
          repository_name: ${{parameters.namespace}}-wheres-teddy
          # git_owner: ${{parameters.githubOrg}}
          cluster: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{parameters.image_host}}
          image_name: ${{parameters.namespace}}/wheres-teddy-app
          image_tag: ${{parameters.image_tag}}
          model_endpoint: ${{parameters.model_endpoint}}
          model_url: ${{parameters.model_endpoint}}/${{parameters.model_path}}
        targetPath: ./tenant-gitops
    - id: publishGitops
      name: Publishing to Deployment Resource Repository
      action: publish:gitlab
      input:
        sourcePath: ./tenant-gitops
        repoUrl: "${{ parameters.host }}?owner=${{ parameters.owner }}&repo=${{parameters.namespace}}-wheres-teddy-gitops"
        # title: gitops resources for ${{parameters.namespace}}-wheres-teddy-app
        # description: gitops resources for ${{parameters.namespace}}-wheres-teddy-app
        defaultBranch: main
        # protectDefaultBranch: false
        repoVisibility: public
    - id: createArgoResources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{parameters.namespace}}-wheres-teddy-app-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.host }}/${{ parameters.owner }}/${{ parameters.namespace }}-wheres-teddy-gitops.git
        path: 'argocd/'
  output:
    links:
      - title: Source Code Repository
        url: ${{steps.publishSource.output.remoteUrl}}
      - title: Pipeline status
        url: https://console-openshift-console${{parameters.cluster_id}}/dev-pipelines/ns/${{parameters.namespace}}/
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{steps.registerSource.output.entityRef}}
